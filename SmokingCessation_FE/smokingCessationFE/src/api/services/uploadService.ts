import apiClient from '../apiClient';

export async function uploadImage(file: File, onUploadProgress?: (progressEvent: any) => void): Promise<string> {
  try {
    // Ki·ªÉm tra file tr∆∞·ªõc khi upload
    if (!file) {
      throw new Error('Kh√¥ng c√≥ file ƒë∆∞·ª£c ch·ªçn');
    }

    if (!file.type.startsWith('image/')) {
      throw new Error('Ch·ªâ cho ph√©p upload file ·∫£nh');
    }

    if (file.size > 1 * 1024 * 1024) { // 1MB
      throw new Error('K√≠ch th∆∞·ªõc file ph·∫£i nh·ªè h∆°n 1MB');
    }

    const formData = new FormData();
    formData.append('file', file);

    console.log('üîÑ Uploading file:', file.name, 'Size:', file.size, 'Type:', file.type);

    // ‚úÖ S·ª≠a endpoint ƒë·ªÉ match v·ªõi AccountController
    const response = await apiClient.post<{ url: string; message?: string }>('/account/upload', formData, {
      headers: {
        // Kh√¥ng set Content-Type ƒë·ªÉ browser t·ª± ƒë·ªông set v·ªõi boundary cho FormData
      },
      onUploadProgress: (progressEvent) => {
        const progress = progressEvent.total 
          ? Math.round((progressEvent.loaded * 100) / progressEvent.total) 
          : 0;
        
        console.log('üì§ Upload progress:', progress + '%');
        
        if (onUploadProgress) {
          onUploadProgress(progressEvent);
        }
      },
      timeout: 30000, // 30 seconds timeout
    });

    console.log('‚úÖ Upload successful:', response.data);

    if (!response.data.url) {
      throw new Error('Kh√¥ng nh·∫≠n ƒë∆∞·ª£c URL ·∫£nh t·ª´ server');
    }

    return response.data.url;

  } catch (error: any) {
    console.error('‚ùå Upload failed:', error);
    
    if (error.response) {
      // Server tr·∫£ v·ªÅ l·ªói
      const status = error.response.status;
      const message = error.response.data?.message || error.response.data || 'L·ªói upload';
      
      if (status === 401) {
        throw new Error('Phi√™n ƒëƒÉng nh·∫≠p h·∫øt h·∫°n. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.');
      } else if (status === 403) {
        throw new Error('Kh√¥ng c√≥ quy·ªÅn upload file. Vui l√≤ng ki·ªÉm tra l·∫°i.');
      } else if (status === 413) {
        throw new Error('File qu√° l·ªõn. Vui l√≤ng ch·ªçn file nh·ªè h∆°n.');
      } else {
        throw new Error(`L·ªói upload: ${message}`);
      }
    } else if (error.code === 'ECONNABORTED') {
      throw new Error('Upload timeout. Vui l√≤ng th·ª≠ l·∫°i.');
    } else if (error.message) {
      throw new Error(error.message);
    } else {
      throw new Error('L·ªói upload kh√¥ng x√°c ƒë·ªãnh');
    }
  }
}